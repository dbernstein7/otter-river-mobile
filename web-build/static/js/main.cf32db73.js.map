{"version":3,"file":"static/js/main.cf32db73.js","mappings":"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","sources":["src/Game.tsx","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\r\n\r\n// Game constants\r\nconst OBSTACLE_TYPES = {\r\n  rock: {\r\n    geometry: new THREE.DodecahedronGeometry(1, 0),\r\n    color: 0x808080,\r\n    scale: 1,\r\n    probability: 0.6\r\n  },\r\n  log: {\r\n    geometry: new THREE.CylinderGeometry(0.5, 0.5, 4, 8),\r\n    color: 0x8B4513,\r\n    scale: 1,\r\n    probability: 0.4\r\n  }\r\n};\r\n\r\nconst FISH_TYPES = {\r\n  normal: {\r\n    geometry: new THREE.ConeGeometry(0.5, 2, 8),\r\n    color: 0xFFD700,\r\n    scale: 1,\r\n    speed: 1,\r\n    points: 1,\r\n    probability: 0.7\r\n  },\r\n  rare: {\r\n    geometry: new THREE.ConeGeometry(0.5, 2, 8),\r\n    color: 0xFF69B4,\r\n    scale: 1.2,\r\n    speed: 1.2,\r\n    points: 3,\r\n    probability: 0.3\r\n  }\r\n};\r\n\r\nconst defaultLeaderboard = () => {\r\n  try {\r\n    return JSON.parse(localStorage.getItem('otterRiverLeaderboard') || '[]');\r\n  } catch {\r\n    return [];\r\n  }\r\n};\r\n\r\nconst Game: React.FC = () => {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  // Game state\r\n  const [score, setScore] = useState(0);\r\n  const [lives, setLives] = useState(3);\r\n  const [level, setLevel] = useState(1);\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [playerName, setPlayerName] = useState('');\r\n  const [leaderboard, setLeaderboard] = useState(defaultLeaderboard());\r\n  const [gameTime, setGameTime] = useState(0);\r\n\r\n  // Three.js refs\r\n  const sceneRef = useRef<THREE.Scene | null>(null);\r\n  const cameraRef = useRef<THREE.PerspectiveCamera | null>(null);\r\n  const rendererRef = useRef<THREE.WebGLRenderer | null>(null);\r\n  const otterRef = useRef<THREE.Object3D | null>(null);\r\n  const riverRef = useRef<THREE.Object3D | null>(null);\r\n  const obstaclesRef = useRef<THREE.Object3D[]>([]);\r\n  const fishRef = useRef<THREE.Object3D[]>([]);\r\n  const lastObstacleTimeRef = useRef(0);\r\n  const lastFishTimeRef = useRef(0);\r\n  const gameTimeRef = useRef(0);\r\n  const timerIntervalRef = useRef<NodeJS.Timeout | null>(null);\r\n  const baseSpeedRef = useRef(0.2);\r\n  const obstacleSpawnIntervalRef = useRef(300);\r\n  const currentObstacleIntervalRef = useRef(300);\r\n\r\n  // Movement controls\r\n  const keysRef = useRef({\r\n    ArrowUp: false,\r\n    ArrowDown: false,\r\n    ArrowLeft: false,\r\n    ArrowRight: false,\r\n    w: false,\r\n    a: false,\r\n    s: false,\r\n    d: false\r\n  });\r\n\r\n  // UI overlays\r\n  const StartScreen = () => (\r\n    <div className=\"overlay\" style={{ display: gameStarted ? 'none' : 'flex' }}>\r\n      <h2>Otter River Adventure</h2>\r\n      <div className=\"rules-container\">\r\n        <h3>How to Play</h3>\r\n        <ul>\r\n          <li>Use WASD or Arrow Keys to move</li>\r\n          <li>Collect fish while avoiding obstacles</li>\r\n          <li>Game speeds up as you level up</li>\r\n          <li>Rarer fish appear at higher levels</li>\r\n        </ul>\r\n      </div>\r\n      <button onClick={startGame}>Start Game</button>\r\n      <h3>Leaderboard</h3>\r\n      <ol>\r\n        {leaderboard.slice(0, 5).map((entry: any, idx: number) => (\r\n          <li key={idx}>{entry.name}: {entry.score} pts, Level {entry.level}, Time {entry.time}</li>\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n\r\n  const GameOverScreen = () => (\r\n    <div className=\"overlay\" style={{ display: gameOver ? 'flex' : 'none' }}>\r\n      <h2>Game Over</h2>\r\n      <div>Final Score: {score}</div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter your name\"\r\n        value={playerName}\r\n        onChange={e => setPlayerName(e.target.value)}\r\n        style={{ margin: '10px' }}\r\n      />\r\n      <button onClick={submitScore}>Submit Score</button>\r\n      <button onClick={restartGame}>Play Again</button>\r\n    </div>\r\n  );\r\n\r\n  // Game functions\r\n  const createObstacle = () => {\r\n    if (!gameStarted || gameOver || !sceneRef.current) return;\r\n\r\n    const random = Math.random();\r\n    let cumulativeProbability = 0;\r\n    let selectedType = 'rock';\r\n\r\n    for (const [type, properties] of Object.entries(OBSTACLE_TYPES)) {\r\n      cumulativeProbability += properties.probability;\r\n      if (random <= cumulativeProbability) {\r\n        selectedType = type;\r\n        break;\r\n      }\r\n    }\r\n\r\n    const obstacleProperties = OBSTACLE_TYPES[selectedType];\r\n    const obstacle = new THREE.Mesh(\r\n      obstacleProperties.geometry,\r\n      new THREE.MeshStandardMaterial({\r\n        color: obstacleProperties.color,\r\n        roughness: 0.8,\r\n        metalness: 0.2\r\n      }) as unknown as THREE.MeshBasicMaterial\r\n    ) as THREE.Mesh;\r\n    \r\n    (obstacle as any).position.x = (Math.random() - 0.5) * 40;\r\n    (obstacle as any).position.y = 0.5;\r\n    (obstacle as any).position.z = -60;\r\n    \r\n    (obstacle as any).rotation.x = Math.random() * Math.PI;\r\n    (obstacle as any).rotation.y = Math.random() * Math.PI;\r\n    (obstacle as any).rotation.z = Math.random() * Math.PI;\r\n    \r\n    (obstacle as any).scale.set(\r\n      obstacleProperties.scale,\r\n      obstacleProperties.scale,\r\n      obstacleProperties.scale\r\n    );\r\n    \r\n    obstacle.castShadow = true;\r\n    obstacle.userData = { type: 'obstacle', obstacleType: selectedType };\r\n    sceneRef.current.add(obstacle);\r\n    obstaclesRef.current.push(obstacle);\r\n  };\r\n\r\n  const createFish = () => {\r\n    if (!gameStarted || gameOver || !sceneRef.current) return;\r\n\r\n    const random = Math.random();\r\n    let cumulativeProbability = 0;\r\n    let selectedType = 'normal';\r\n\r\n    for (const [type, properties] of Object.entries(FISH_TYPES)) {\r\n      cumulativeProbability += properties.probability;\r\n      if (random <= cumulativeProbability) {\r\n        selectedType = type;\r\n        break;\r\n      }\r\n    }\r\n\r\n    const fishProperties = FISH_TYPES[selectedType];\r\n    const fish = new THREE.Mesh(\r\n      fishProperties.geometry,\r\n      new THREE.MeshStandardMaterial({\r\n        color: fishProperties.color,\r\n        roughness: 0.3,\r\n        metalness: 0.8\r\n      }) as unknown as THREE.MeshBasicMaterial\r\n    ) as THREE.Mesh;\r\n\r\n    (fish as any).position.x = (Math.random() - 0.5) * 40;\r\n    (fish as any).position.y = 0.5;\r\n    (fish as any).position.z = -60;\r\n    (fish as any).rotation.y = Math.PI / 2;\r\n    (fish as any).scale.set(\r\n      fishProperties.scale,\r\n      fishProperties.scale,\r\n      fishProperties.scale\r\n    );\r\n    fish.castShadow = true;\r\n    fish.userData = { type: selectedType, points: fishProperties.points };\r\n    sceneRef.current.add(fish);\r\n    fishRef.current.push(fish);\r\n  };\r\n\r\n  const startGame = () => {\r\n    if (gameStarted) return;\r\n    setGameStarted(true);\r\n    setGameOver(false);\r\n    lastObstacleTimeRef.current = Date.now();\r\n    lastFishTimeRef.current = Date.now();\r\n    \r\n    // Start level progression timer\r\n    timerIntervalRef.current = setInterval(() => {\r\n      setLevel(prev => prev + 1);\r\n      baseSpeedRef.current += 0.02;\r\n    }, 15000);\r\n  };\r\n\r\n  const restartGame = () => {\r\n    // Clear existing game elements\r\n    if (sceneRef.current) {\r\n      obstaclesRef.current.forEach(obstacle => sceneRef.current!.remove(obstacle));\r\n      fishRef.current.forEach(fish => sceneRef.current!.remove(fish));\r\n    }\r\n    \r\n    // Clear timer\r\n    if (timerIntervalRef.current) {\r\n      clearInterval(timerIntervalRef.current);\r\n    }\r\n    \r\n    // Reset game state\r\n    resetGameState();\r\n    setGameOver(false);\r\n    startGame();\r\n  };\r\n\r\n  const submitScore = () => {\r\n    const name = playerName.trim() || 'Anonymous';\r\n    const newScore = {\r\n      name,\r\n      score,\r\n      level,\r\n      time: Math.round(gameTime)\r\n    };\r\n    \r\n    const updatedLeaderboard = [...leaderboard, newScore]\r\n      .sort((a, b) => b.score - a.score)\r\n      .slice(0, 10);\r\n    \r\n    setLeaderboard(updatedLeaderboard);\r\n    localStorage.setItem('otterRiverLeaderboard', JSON.stringify(updatedLeaderboard));\r\n    setPlayerName('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!containerRef.current || gameStarted) return;\r\n\r\n    const init = async () => {\r\n      try {\r\n        // Create game container\r\n        const gameContainer = document.createElement('div');\r\n        gameContainer.id = 'game-container';\r\n        gameContainer.style.width = '100%';\r\n        gameContainer.style.height = '100%';\r\n        containerRef.current!.appendChild(gameContainer);\r\n\r\n        // Initialize Three.js scene\r\n        const scene = new THREE.Scene();\r\n        scene.background = new THREE.Color(0x87CEEB);\r\n        scene.fog = new THREE.Fog(0x87CEEB, 20, 100);\r\n        sceneRef.current = scene;\r\n\r\n        const camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n        (camera as any).position.set(0, 15, 20);\r\n        (camera as any).lookAt(0, 0, -100);\r\n        cameraRef.current = camera;\r\n        scene.add(camera);\r\n\r\n        const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        (renderer as any).shadowMap.enabled = true;\r\n        (renderer as any).shadowMap.type = THREE.PCFSoftShadowMap;\r\n        rendererRef.current = renderer;\r\n        gameContainer.appendChild(renderer.domElement);\r\n\r\n        // Add lights\r\n        const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\r\n        scene.add(ambientLight);\r\n        const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\r\n        (directionalLight as any).position.set(5, 5, 5);\r\n        directionalLight.castShadow = true;\r\n        directionalLight.shadow.mapSize.width = 2048;\r\n        directionalLight.shadow.mapSize.height = 2048;\r\n        scene.add(directionalLight);\r\n\r\n        // Create environment\r\n        createEnvironment();\r\n\r\n        // Create river\r\n        createRiver();\r\n\r\n        // Create otter\r\n        createOtter();\r\n\r\n        // Add event listeners\r\n        window.addEventListener('resize', onWindowResize);\r\n        window.addEventListener('keydown', onKeyDown);\r\n        window.addEventListener('keyup', onKeyUp);\r\n\r\n        // Reset game state\r\n        resetGameState();\r\n\r\n        // Start animation loop\r\n        animate();\r\n      } catch (error) {\r\n        console.error('Error initializing game:', error);\r\n      }\r\n    };\r\n\r\n    init();\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      window.removeEventListener('resize', onWindowResize);\r\n      window.removeEventListener('keydown', onKeyDown);\r\n      window.removeEventListener('keyup', onKeyUp);\r\n      if (timerIntervalRef.current) {\r\n        clearInterval(timerIntervalRef.current);\r\n      }\r\n      if (containerRef.current) {\r\n        const gameContainer = containerRef.current.querySelector('#game-container');\r\n        if (gameContainer) {\r\n          containerRef.current.removeChild(gameContainer);\r\n        }\r\n      }\r\n      if (rendererRef.current) {\r\n        rendererRef.current.dispose();\r\n      }\r\n    };\r\n  }, [gameStarted]);\r\n\r\n  const update = () => {\r\n    if (!gameStarted || gameOver) return;\r\n\r\n    // Move otter based on key presses\r\n    if (!otterRef.current) return;\r\n    const moveSpeed = 0.2;\r\n    let moving = false;\r\n    let targetRotation = (otterRef.current as any).rotation.y;\r\n\r\n    if (keysRef.current.ArrowUp || keysRef.current.w) {\r\n      (otterRef.current as any).position.z -= moveSpeed;\r\n      targetRotation = Math.PI;\r\n      moving = true;\r\n    }\r\n    if (keysRef.current.ArrowDown || keysRef.current.s) {\r\n      (otterRef.current as any).position.z += moveSpeed;\r\n      targetRotation = 0;\r\n      moving = true;\r\n    }\r\n    if (keysRef.current.ArrowLeft || keysRef.current.a) {\r\n      (otterRef.current as any).position.x -= moveSpeed;\r\n      targetRotation = -Math.PI / 2;\r\n      moving = true;\r\n    }\r\n    if (keysRef.current.ArrowRight || keysRef.current.d) {\r\n      (otterRef.current as any).position.x += moveSpeed;\r\n      targetRotation = Math.PI / 2;\r\n      moving = true;\r\n    }\r\n\r\n    if (moving) {\r\n      (otterRef.current as any).rotation.y = THREE.MathUtils.lerp((otterRef.current as any).rotation.y, targetRotation, 0.2);\r\n    }\r\n\r\n    // Keep otter within bounds\r\n    (otterRef.current as any).position.x = Math.max(-20, Math.min(20, (otterRef.current as any).position.x));\r\n    (otterRef.current as any).position.z = Math.max(-49, Math.min(49, (otterRef.current as any).position.z));\r\n\r\n    // Calculate current speed based on level\r\n    const currentSpeed = baseSpeedRef.current * (1 + (level - 1) * 0.15);\r\n\r\n    // Update obstacle spawn interval based on level\r\n    currentObstacleIntervalRef.current = Math.max(100, obstacleSpawnIntervalRef.current - (level * 20));\r\n\r\n    // Spawn obstacles and fish\r\n    const currentTime = Date.now();\r\n    if (currentTime - lastObstacleTimeRef.current > currentObstacleIntervalRef.current) {\r\n      createObstacle();\r\n      if (Math.random() < (level * 0.1)) {\r\n        createObstacle();\r\n      }\r\n      lastObstacleTimeRef.current = currentTime;\r\n    }\r\n\r\n    if (currentTime - lastFishTimeRef.current > 1500) {\r\n      createFish();\r\n      lastFishTimeRef.current = currentTime;\r\n    }\r\n\r\n    // Update obstacles\r\n    for (let i = obstaclesRef.current.length - 1; i >= 0; i--) {\r\n      const obstacle = obstaclesRef.current[i];\r\n      (obstacle as any).position.z += currentSpeed;\r\n      \r\n      if ((obstacle as any).position.z > 10) {\r\n        sceneRef.current?.remove(obstacle);\r\n        obstaclesRef.current.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    // Update fish\r\n    for (let i = fishRef.current.length - 1; i >= 0; i--) {\r\n      const fish = fishRef.current[i];\r\n      const fishType = (fish as any).userData.type;\r\n      const fishSpeed = FISH_TYPES[fishType].speed * currentSpeed;\r\n      \r\n      (fish as any).position.z += fishSpeed;\r\n      (fish as any).position.y = 0.5 + Math.sin(Date.now() * 0.003 + i) * 0.1;\r\n      \r\n      if ((fish as any).position.z > 10) {\r\n        sceneRef.current?.remove(fish);\r\n        fishRef.current.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    // Update game time\r\n    gameTimeRef.current += 1/120;\r\n    setGameTime(gameTimeRef.current);\r\n\r\n    // Check collisions\r\n    checkCollisions();\r\n\r\n    // Update environment\r\n    updateEnvironment();\r\n  };\r\n\r\n  const checkCollisions = () => {\r\n    if (!gameStarted || gameOver || !otterRef.current || !sceneRef.current) return;\r\n    const scene = sceneRef.current;\r\n\r\n    // Check obstacle collisions\r\n    for (let i = obstaclesRef.current.length - 1; i >= 0; i--) {\r\n      const obstacle = obstaclesRef.current[i];\r\n      const distance = (otterRef.current as any).position.distanceTo((obstacle as any).position);\r\n      if (distance < 1.5) {\r\n        setLives(prev => prev - 1);\r\n        scene.remove(obstacle);\r\n        obstaclesRef.current.splice(i, 1);\r\n        if (lives <= 1) {\r\n          endGame();\r\n        }\r\n      }\r\n    }\r\n\r\n    // Check fish collisions\r\n    for (let i = fishRef.current.length - 1; i >= 0; i--) {\r\n      const fish = fishRef.current[i];\r\n      const distance = (otterRef.current as any).position.distanceTo((fish as any).position);\r\n      if (distance < 1.5) {\r\n        setScore(prev => prev + 1);\r\n        scene.remove(fish);\r\n        fishRef.current.splice(i, 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const endGame = () => {\r\n    setGameOver(true);\r\n    setGameStarted(false);\r\n    if (timerIntervalRef.current) {\r\n      clearInterval(timerIntervalRef.current);\r\n    }\r\n  };\r\n\r\n  const updateEnvironment = () => {\r\n    if (!gameStarted || gameOver || !sceneRef.current) return;\r\n    const scene = sceneRef.current;\r\n\r\n    // Animate river surface\r\n    if (riverRef.current) {\r\n      const time = Date.now() * 0.001;\r\n      const vertices = (riverRef.current as any).geometry.attributes.position.array;\r\n      for (let i = 0; i < vertices.length; i += 3) {\r\n        const x = vertices[i];\r\n        const z = vertices[i + 2];\r\n        vertices[i + 1] = Math.sin(x * 0.5 + time) * 0.2 + Math.sin(z * 0.5 + time) * 0.2;\r\n      }\r\n      (riverRef.current as any).geometry.attributes.position.needsUpdate = true;\r\n      (riverRef.current as any).geometry.computeVertexNormals();\r\n    }\r\n\r\n    // Animate sun\r\n    if (scene.userData.sunGroup) {\r\n      const sun = scene.userData.sunGroup;\r\n      (sun as any).rotation.y += 0.0005;\r\n      (sun as any).rotation.z = Math.sin(Date.now() * 0.0003) * 0.05;\r\n    }\r\n\r\n    // Animate clouds\r\n    if (scene.userData.cloudGroup) {\r\n      const cloudGroup = scene.userData.cloudGroup;\r\n      cloudGroup.children.forEach((cloud: any) => {\r\n        (cloud as any).position.x += (cloud as any).userData.speed;\r\n        if ((cloud as any).position.x > 200) {\r\n          (cloud as any).position.x = -200;\r\n        }\r\n        (cloud as any).position.y += Math.sin(Date.now() * 0.001 + (cloud as any).position.x) * 0.01;\r\n      });\r\n    }\r\n  };\r\n\r\n  const onWindowResize = () => {\r\n    if (!cameraRef.current || !rendererRef.current) return;\r\n    const width = window.innerWidth;\r\n    const height = window.innerHeight;\r\n    cameraRef.current.aspect = width / height;\r\n    cameraRef.current.updateProjectionMatrix();\r\n    rendererRef.current.setSize(width, height);\r\n  };\r\n\r\n  const onKeyDown = (event: KeyboardEvent) => {\r\n    if (keysRef.current.hasOwnProperty(event.key)) {\r\n      keysRef.current[event.key as keyof typeof keysRef.current] = true;\r\n    }\r\n  };\r\n\r\n  const onKeyUp = (event: KeyboardEvent) => {\r\n    if (keysRef.current.hasOwnProperty(event.key)) {\r\n      keysRef.current[event.key as keyof typeof keysRef.current] = false;\r\n    }\r\n  };\r\n\r\n  const resetGameState = () => {\r\n    setScore(0);\r\n    setLives(3);\r\n    setLevel(1);\r\n    setGameStarted(false);\r\n    setGameOver(false);\r\n    obstaclesRef.current = [];\r\n    fishRef.current = [];\r\n    lastObstacleTimeRef.current = 0;\r\n    lastFishTimeRef.current = 0;\r\n    gameTimeRef.current = 0;\r\n    baseSpeedRef.current = 0.2;\r\n    currentObstacleIntervalRef.current = obstacleSpawnIntervalRef.current;\r\n  };\r\n\r\n  const animate = () => {\r\n    if (!sceneRef.current || !cameraRef.current || !rendererRef.current) return;\r\n    requestAnimationFrame(animate);\r\n    update();\r\n    rendererRef.current.render(sceneRef.current, cameraRef.current);\r\n  };\r\n\r\n  const createEnvironment = () => {\r\n    if (!sceneRef.current) return;\r\n    const scene = sceneRef.current;\r\n    // Create sun\r\n    const sunGeometry = new THREE.SphereGeometry(5, 32, 32);\r\n    const sunMaterial = new THREE.MeshBasicMaterial({\r\n      color: 0xffff00,\r\n      transparent: true,\r\n      opacity: 0.8\r\n    });\r\n    const sun = new THREE.Mesh(sunGeometry, sunMaterial) as THREE.Mesh;\r\n    (sun as any).position.set(30, 30, -50);\r\n    scene.add(sun);\r\n\r\n    // Add sun glow\r\n    const sunGlowGeometry = new THREE.SphereGeometry(6, 32, 32);\r\n    const sunGlowMaterial = new THREE.MeshBasicMaterial({\r\n      color: 0xffff00,\r\n      transparent: true,\r\n      opacity: 0.3\r\n    });\r\n    const sunGlow = new THREE.Mesh(sunGlowGeometry, sunGlowMaterial) as THREE.Mesh;\r\n    (sunGlow as any).position.set(30, 30, -50);\r\n    scene.add(sunGlow);\r\n\r\n    // Create clouds\r\n    const cloudGroup = new THREE.Group();\r\n    const cloudMaterial = new THREE.MeshStandardMaterial({\r\n      color: 0xFFFFFF,\r\n      transparent: true,\r\n      opacity: 0.9,\r\n      roughness: 0.8,\r\n      metalness: 0.2\r\n    });\r\n\r\n    for (let i = 0; i < 10; i++) {\r\n      const cloud = createCloud(cloudMaterial);\r\n      (cloud as any).position.set(\r\n        (Math.random() - 0.5) * 300,\r\n        20 + Math.random() * 15,\r\n        -100 - Math.random() * 200\r\n      );\r\n      (cloud as any).scale.set(\r\n        1 + Math.random(),\r\n        1 + Math.random(),\r\n        1 + Math.random()\r\n      );\r\n      cloud.userData = {\r\n        speed: 0.02 + Math.random() * 0.03,\r\n        initialX: (cloud as any).position.x\r\n      };\r\n      cloudGroup.add(cloud);\r\n    }\r\n    scene.add(cloudGroup);\r\n    scene.userData.sunGroup = sun;\r\n    scene.userData.cloudGroup = cloudGroup;\r\n  };\r\n\r\n  const createCloud = (material: THREE.Material) => {\r\n    const cloudGroup = new THREE.Group();\r\n    const numBlobs = 3 + Math.floor(Math.random() * 3);\r\n    for (let i = 0; i < numBlobs; i++) {\r\n      const blobGeometry = new THREE.SphereGeometry(1, 8, 8);\r\n      const blob = new THREE.Mesh(blobGeometry, material as unknown as THREE.MeshBasicMaterial) as THREE.Mesh;\r\n      (blob as any).position.set(\r\n        (Math.random() - 0.5) * 2,\r\n        (Math.random() - 0.5) * 2,\r\n        (Math.random() - 0.5) * 2\r\n      );\r\n      (blob as any).scale.set(\r\n        1 + Math.random(),\r\n        1 + Math.random(),\r\n        1 + Math.random()\r\n      );\r\n      cloudGroup.add(blob);\r\n    }\r\n    return cloudGroup;\r\n  };\r\n\r\n  const createRiver = () => {\r\n    if (!sceneRef.current) return;\r\n    const scene = sceneRef.current;\r\n    const riverGeometry = new THREE.PlaneGeometry(100, 1000, 20, 20);\r\n    const riverMaterial = new THREE.MeshStandardMaterial({\r\n      color: 0x4682B4,\r\n      roughness: 0.2,\r\n      metalness: 0.8,\r\n      transparent: true,\r\n      opacity: 0.8\r\n    }) as unknown as THREE.MeshBasicMaterial;\r\n    const river = new THREE.Mesh(riverGeometry, riverMaterial) as THREE.Mesh;\r\n    (river as any).rotation.x = -Math.PI / 2;\r\n    (river as any).position.z = -500;\r\n    river.receiveShadow = true;\r\n    scene.add(river);\r\n    riverRef.current = river;\r\n  };\r\n\r\n  const createOtter = () => {\r\n    if (!sceneRef.current) return;\r\n    const scene = sceneRef.current;\r\n    const otterGeometry = new THREE.CapsuleGeometry(0.5, 1, 4, 8);\r\n    const otterMaterial = new THREE.MeshStandardMaterial({\r\n      color: 0x8B4513,\r\n      roughness: 0.7,\r\n      metalness: 0.2\r\n    }) as unknown as THREE.MeshBasicMaterial;\r\n    const otter = new THREE.Mesh(otterGeometry, otterMaterial) as THREE.Mesh;\r\n    (otter as any).position.set(0, 0.25, 0);\r\n    (otter as any).rotation.y = Math.PI;\r\n    otter.castShadow = true;\r\n    scene.add(otter);\r\n    otterRef.current = otter;\r\n  };\r\n\r\n  return (\r\n    <div ref={containerRef} style={{ width: '100%', height: '100%', position: 'relative' }}>\r\n      <StartScreen />\r\n      <GameOverScreen />\r\n      {/* Game Info */}\r\n      <div style={{ position: 'absolute', top: 10, left: 10, color: '#222', zIndex: 2 }}>\r\n        <div>Score: {score}</div>\r\n        <div>Lives: {lives}</div>\r\n        <div>Level: {level}</div>\r\n        <div>Time: {Math.floor(gameTime / 60)}:{Math.floor(gameTime % 60).toString().padStart(2, '0')}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game; ","import React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, Text, View, Dimensions } from 'react-native';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport Game from './src/Game';\r\n\r\nexport default function App() {\r\n  const [dimensions, setDimensions] = useState({\r\n    width: Dimensions.get('window').width,\r\n    height: Dimensions.get('window').height,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const subscription = Dimensions.addEventListener('change', ({ window }) => {\r\n      setDimensions({\r\n        width: window.width,\r\n        height: window.height,\r\n      });\r\n    });\r\n\r\n    return () => subscription?.remove();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={[styles.container, { width: dimensions.width, height: dimensions.height }]}>\r\n      <Text style={styles.title}>Otter River Adventure</Text>\r\n      <Text style={styles.subtitle}>Mobile Version</Text>\r\n      <View style={styles.gameContainer}>\r\n        <Game />\r\n      </View>\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n  subtitle: {\r\n    fontSize: 18,\r\n    color: '#666',\r\n    marginBottom: 20,\r\n  },\r\n  gameContainer: {\r\n    width: '100%',\r\n    height: '70%',\r\n    backgroundColor: '#f0f0f0',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n}); ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [753], () => (__webpack_require__(6387)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["OBSTACLE_TYPES","rock","geometry","THREE","color","scale","probability","log","FISH_TYPES","normal","speed","points","rare","containerRef","useRef","_useState","useState","_useState2","_slicedToArray","score","setScore","_useState3","_useState4","lives","setLives","_useState5","_useState6","level","setLevel","_useState7","_useState8","gameStarted","setGameStarted","_useState9","_useState0","gameOver","setGameOver","_useState1","_useState10","playerName","setPlayerName","_useState11","JSON","parse","localStorage","getItem","_unused","defaultLeaderboard","_useState12","leaderboard","setLeaderboard","_useState13","_useState14","gameTime","setGameTime","sceneRef","cameraRef","rendererRef","otterRef","riverRef","obstaclesRef","fishRef","lastObstacleTimeRef","lastFishTimeRef","gameTimeRef","timerIntervalRef","baseSpeedRef","obstacleSpawnIntervalRef","currentObstacleIntervalRef","keysRef","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","w","a","s","d","createObstacle","current","random","Math","cumulativeProbability","selectedType","_ref","Object","entries","_ref2","type","obstacleProperties","obstacle","roughness","metalness","position","x","y","z","rotation","PI","set","castShadow","userData","obstacleType","add","push","startGame","Date","now","setInterval","prev","restartGame","forEach","remove","fish","clearInterval","resetGameState","submitScore","newScore","name","trim","time","round","updatedLeaderboard","concat","_toConsumableArray","sort","b","slice","setItem","stringify","useEffect","init","_ref5","_asyncToGenerator","gameContainer","document","createElement","id","style","width","height","appendChild","scene","background","fog","camera","window","innerWidth","innerHeight","lookAt","renderer","antialias","setSize","shadowMap","enabled","domElement","ambientLight","directionalLight","shadow","mapSize","createEnvironment","createRiver","createOtter","addEventListener","onWindowResize","onKeyDown","onKeyUp","animate","error","console","apply","arguments","removeEventListener","querySelector","removeChild","dispose","update","moveSpeed","moving","targetRotation","lerp","max","min","currentSpeed","currentTime","_ref3","_ref4","fishProperties","createFish","i","length","_sceneRef$current","splice","_sceneRef$current2","fishType","fishSpeed","sin","checkCollisions","updateEnvironment","distanceTo","endGame","vertices","attributes","array","needsUpdate","computeVertexNormals","sunGroup","sun","cloudGroup","children","cloud","aspect","updateProjectionMatrix","event","hasOwnProperty","key","requestAnimationFrame","render","sunGeometry","sunMaterial","transparent","opacity","sunGlowGeometry","sunGlowMaterial","sunGlow","cloudMaterial","createCloud","initialX","material","numBlobs","floor","blobGeometry","blob","riverGeometry","riverMaterial","river","receiveShadow","otterGeometry","otterMaterial","otter","_jsxs","ref","_jsx","className","display","onClick","map","entry","idx","placeholder","value","onChange","e","target","margin","top","left","zIndex","toString","padStart","App","Dimensions","get","dimensions","setDimensions","subscription","View","styles","container","Text","title","subtitle","Game","StatusBar","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontSize","fontWeight","marginBottom","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","r","n","getter","__esModule","definition","o","defineProperty","enumerable","obj","prop","prototype","call","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}