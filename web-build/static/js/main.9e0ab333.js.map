{"version":3,"file":"static/js/main.9e0ab333.js","mappings":"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","sources":["src/Game.tsx","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\r\n\r\n// Game constants\r\nconst OBSTACLE_TYPES = {\r\n  rock: {\r\n    geometry: new THREE.DodecahedronGeometry(1, 0),\r\n    color: 0x808080,\r\n    scale: 1,\r\n    probability: 0.6\r\n  },\r\n  log: {\r\n    geometry: new THREE.CylinderGeometry(0.5, 0.5, 4, 8),\r\n    color: 0x8B4513,\r\n    scale: 1,\r\n    probability: 0.4\r\n  }\r\n};\r\n\r\nconst FISH_TYPES = {\r\n  normal: {\r\n    geometry: new THREE.ConeGeometry(0.5, 2, 8),\r\n    color: 0xFFD700,\r\n    scale: 1,\r\n    speed: 1,\r\n    points: 1,\r\n    probability: 0.7\r\n  },\r\n  rare: {\r\n    geometry: new THREE.ConeGeometry(0.5, 2, 8),\r\n    color: 0xFF69B4,\r\n    scale: 1.2,\r\n    speed: 1.2,\r\n    points: 3,\r\n    probability: 0.3\r\n  }\r\n};\r\n\r\nconst defaultLeaderboard = () => {\r\n  try {\r\n    return JSON.parse(localStorage.getItem('otterRiverLeaderboard') || '[]');\r\n  } catch {\r\n    return [];\r\n  }\r\n};\r\n\r\nconst Game: React.FC = () => {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  // Game state\r\n  const [score, setScore] = useState(0);\r\n  const [lives, setLives] = useState(3);\r\n  const [level, setLevel] = useState(1);\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [playerName, setPlayerName] = useState('');\r\n  const [leaderboard, setLeaderboard] = useState(defaultLeaderboard());\r\n  const [gameTime, setGameTime] = useState(0);\r\n\r\n  // Three.js refs\r\n  const sceneRef = useRef<THREE.Scene | null>(null);\r\n  const cameraRef = useRef<THREE.PerspectiveCamera | null>(null);\r\n  const rendererRef = useRef<THREE.WebGLRenderer | null>(null);\r\n  const otterRef = useRef<THREE.Object3D | null>(null);\r\n  const riverRef = useRef<THREE.Object3D | null>(null);\r\n  const obstaclesRef = useRef<THREE.Object3D[]>([]);\r\n  const fishRef = useRef<THREE.Object3D[]>([]);\r\n  const lastObstacleTimeRef = useRef(0);\r\n  const lastFishTimeRef = useRef(0);\r\n  const gameTimeRef = useRef(0);\r\n  const timerIntervalRef = useRef<NodeJS.Timeout | null>(null);\r\n  const baseSpeedRef = useRef(0.2);\r\n  const obstacleSpawnIntervalRef = useRef(300);\r\n  const currentObstacleIntervalRef = useRef(300);\r\n  const animationFrameRef = useRef<number | null>(null);\r\n\r\n  // Movement controls\r\n  const keysRef = useRef({\r\n    ArrowUp: false,\r\n    ArrowDown: false,\r\n    ArrowLeft: false,\r\n    ArrowRight: false,\r\n    w: false,\r\n    a: false,\r\n    s: false,\r\n    d: false\r\n  });\r\n\r\n  // UI overlays\r\n  const StartScreen = () => (\r\n    <div style={{\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n      display: gameStarted ? 'none' : 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n      backdropFilter: 'blur(10px)',\r\n      zIndex: 1000,\r\n      animation: 'fadeIn 0.5s ease-out'\r\n    }}>\r\n      <h1 style={{\r\n        fontSize: '3rem',\r\n        color: '#fff',\r\n        textShadow: '0 0 10px rgba(255, 255, 255, 0.5)',\r\n        marginBottom: '2rem',\r\n        animation: 'glow 2s infinite alternate'\r\n      }}>Otter Adventure</h1>\r\n      <button\r\n        onClick={startGame}\r\n        style={{\r\n          padding: '1rem 2rem',\r\n          fontSize: '1.5rem',\r\n          backgroundColor: '#4CAF50',\r\n          color: 'white',\r\n          border: 'none',\r\n          borderRadius: '50px',\r\n          cursor: 'pointer',\r\n          transition: 'all 0.3s ease',\r\n          boxShadow: '0 0 20px rgba(76, 175, 80, 0.3)',\r\n          animation: 'fadeIn 0.5s ease-out 0.3s both'\r\n        }}\r\n        className=\"start-button\"\r\n      >\r\n        Start Adventure\r\n      </button>\r\n      <div style={{\r\n        marginTop: '2rem',\r\n        color: '#fff',\r\n        textAlign: 'center',\r\n        maxWidth: '600px',\r\n        animation: 'fadeIn 0.5s ease-out 0.6s both'\r\n      }}>\r\n        <h2 style={{ fontSize: '1.5rem', marginBottom: '1rem' }}>How to Play</h2>\r\n        <p style={{ marginBottom: '0.5rem' }}>Use arrow keys to move the otter</p>\r\n        <p style={{ marginBottom: '0.5rem' }}>Collect fish to earn points</p>\r\n        <p style={{ marginBottom: '0.5rem' }}>Avoid obstacles to stay alive</p>\r\n        <p>Complete levels to progress!</p>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const GameOverScreen = () => (\r\n    <div style={{\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n      display: gameOver ? 'flex' : 'none',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n      backdropFilter: 'blur(10px)',\r\n      zIndex: 1000,\r\n      animation: 'fadeIn 0.5s ease-out'\r\n    }}>\r\n      <h1 style={{\r\n        fontSize: '3rem',\r\n        color: '#fff',\r\n        marginBottom: '1rem',\r\n        animation: 'glow 2s infinite alternate'\r\n      }}>Game Over</h1>\r\n      <p style={{\r\n        fontSize: '1.5rem',\r\n        color: '#fff',\r\n        marginBottom: '2rem',\r\n        animation: 'fadeIn 0.5s ease-out 0.3s both'\r\n      }}>\r\n        Final Score: {score}\r\n      </p>\r\n      <div style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        gap: '1rem',\r\n        animation: 'fadeIn 0.5s ease-out 0.6s both'\r\n      }}>\r\n        <input\r\n          type=\"text\"\r\n          value={playerName}\r\n          onChange={(e) => setPlayerName(e.target.value)}\r\n          placeholder=\"Enter your name\"\r\n          style={{\r\n            padding: '0.5rem 1rem',\r\n            fontSize: '1.2rem',\r\n            borderRadius: '25px',\r\n            border: '2px solid rgba(255, 0, 255, 0.5)',\r\n            backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n            color: '#fff',\r\n            width: '250px',\r\n            animation: 'borderPulse 2s infinite'\r\n          }}\r\n        />\r\n        <button\r\n          onClick={submitScore}\r\n          style={{\r\n            padding: '0.8rem 1.5rem',\r\n            fontSize: '1.2rem',\r\n            backgroundColor: '#4CAF50',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '25px',\r\n            cursor: 'pointer',\r\n            transition: 'all 0.3s ease',\r\n            boxShadow: '0 0 20px rgba(76, 175, 80, 0.3)'\r\n          }}\r\n          className=\"start-button\"\r\n        >\r\n          Submit Score\r\n        </button>\r\n      </div>\r\n      <div style={{\r\n        marginTop: '2rem',\r\n        color: '#fff',\r\n        textAlign: 'center',\r\n        animation: 'fadeIn 0.5s ease-out 0.9s both'\r\n      }}>\r\n        <h2 style={{ fontSize: '1.5rem', marginBottom: '1rem' }}>Leaderboard</h2>\r\n        {leaderboard.map((entry, index) => (\r\n          <div key={index} style={{\r\n            marginBottom: '0.5rem',\r\n            fontSize: '1.2rem',\r\n            color: index === 0 ? '#FFD700' : '#fff'\r\n          }}>\r\n            {entry.name}: {entry.score}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const GameInfo = () => (\r\n    <div style={{\r\n      position: 'absolute',\r\n      top: '20px',\r\n      left: '20px',\r\n      color: '#fff',\r\n      fontSize: '1.2rem',\r\n      textShadow: '2px 2px 4px rgba(0, 0, 0, 0.5)',\r\n      zIndex: 100,\r\n      animation: 'fadeIn 0.5s ease-out'\r\n    }}>\r\n      <div style={{ marginBottom: '0.5rem' }}>Score: {score}</div>\r\n      <div style={{ marginBottom: '0.5rem' }}>Lives: {lives}</div>\r\n      <div style={{ marginBottom: '0.5rem' }}>Level: {level}</div>\r\n      <div>Time: {Math.floor(gameTime / 60)}:{Math.floor(gameTime % 60).toString().padStart(2, '0')}</div>\r\n    </div>\r\n  );\r\n\r\n  // Add touch controls state\r\n  const [touchStart, setTouchStart] = useState({ x: 0, y: 0 });\r\n  const [touchActive, setTouchActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!containerRef.current) return;\r\n\r\n    // Initialize Three.js scene\r\n    const scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0x87CEEB);\r\n    scene.fog = new THREE.Fog(0x87CEEB, 20, 100);\r\n    sceneRef.current = scene;\r\n\r\n    // Set up camera with adjusted position for mobile\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75, // Increased FOV for better mobile view\r\n      window.innerWidth / window.innerHeight,\r\n      0.1,\r\n      1000\r\n    );\r\n    (camera as any).position.set(0, 20, 30); // Adjusted position for better view\r\n    (camera as any).lookAt(0, 0, -100);\r\n    cameraRef.current = camera;\r\n    scene.add(camera);\r\n\r\n    // Set up renderer with proper mobile settings\r\n    const renderer = new THREE.WebGLRenderer({ \r\n      antialias: true,\r\n      alpha: true,\r\n      powerPreference: 'high-performance'\r\n    });\r\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2)); // Limit pixel ratio for performance\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    (renderer as any).shadowMap.enabled = true;\r\n    (renderer as any).shadowMap.type = THREE.PCFSoftShadowMap;\r\n    rendererRef.current = renderer;\r\n    containerRef.current.appendChild(renderer.domElement);\r\n\r\n    // Add touch event listeners\r\n    const handleTouchStart = (e: TouchEvent) => {\r\n      const touch = e.touches[0];\r\n      setTouchStart({ x: touch.clientX, y: touch.clientY });\r\n      setTouchActive(true);\r\n    };\r\n\r\n    const handleTouchMove = (e: TouchEvent) => {\r\n      if (!touchActive) return;\r\n      const touch = e.touches[0];\r\n      const deltaX = touch.clientX - touchStart.x;\r\n      const deltaY = touch.clientY - touchStart.y;\r\n\r\n      // Update key states based on touch movement\r\n      keysRef.current.ArrowLeft = deltaX < -10;\r\n      keysRef.current.ArrowRight = deltaX > 10;\r\n      keysRef.current.ArrowUp = deltaY < -10;\r\n      keysRef.current.ArrowDown = deltaY > 10;\r\n    };\r\n\r\n    const handleTouchEnd = () => {\r\n      setTouchActive(false);\r\n      // Reset all movement keys\r\n      Object.keys(keysRef.current).forEach(key => {\r\n        keysRef.current[key as keyof typeof keysRef.current] = false;\r\n      });\r\n    };\r\n\r\n    containerRef.current.addEventListener('touchstart', handleTouchStart);\r\n    containerRef.current.addEventListener('touchmove', handleTouchMove);\r\n    containerRef.current.addEventListener('touchend', handleTouchEnd);\r\n\r\n    // Add lights\r\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.6); // Increased ambient light\r\n    scene.add(ambientLight);\r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1.0); // Increased directional light\r\n    (directionalLight as any).position.set(5, 10, 5); // Adjusted light position\r\n    directionalLight.castShadow = true;\r\n    directionalLight.shadow.mapSize.width = 2048;\r\n    directionalLight.shadow.mapSize.height = 2048;\r\n    scene.add(directionalLight);\r\n\r\n    // Create environment with adjusted scale\r\n    createEnvironment();\r\n\r\n    // Create river with adjusted scale\r\n    createRiver();\r\n\r\n    // Create otter with adjusted scale\r\n    createOtter();\r\n\r\n    // Add event listeners\r\n    window.addEventListener('resize', onWindowResize);\r\n    window.addEventListener('keydown', onKeyDown);\r\n    window.addEventListener('keyup', onKeyUp);\r\n\r\n    // Start animation loop\r\n    const animate = () => {\r\n      if (!sceneRef.current || !cameraRef.current || !rendererRef.current) return;\r\n      animationFrameRef.current = requestAnimationFrame(animate);\r\n      \r\n      // Always render the scene, even when game is not started\r\n      if (gameStarted && !gameOver) {\r\n        update();\r\n      }\r\n      rendererRef.current.render(sceneRef.current, cameraRef.current);\r\n    };\r\n    animate();\r\n\r\n    // Add CSS animations and mobile styles\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      @keyframes glow {\r\n        from {\r\n          text-shadow: 0 0 10px rgba(255, 255, 255, 0.5),\r\n                       0 0 20px rgba(255, 255, 255, 0.3),\r\n                       0 0 30px rgba(255, 255, 255, 0.2);\r\n        }\r\n        to {\r\n          text-shadow: 0 0 20px rgba(255, 255, 255, 0.7),\r\n                       0 0 30px rgba(255, 255, 255, 0.5),\r\n                       0 0 40px rgba(255, 255, 255, 0.3);\r\n        }\r\n      }\r\n\r\n      @keyframes fadeIn {\r\n        from {\r\n          opacity: 0;\r\n          transform: translateY(20px);\r\n        }\r\n        to {\r\n          opacity: 1;\r\n          transform: translateY(0);\r\n        }\r\n      }\r\n\r\n      @keyframes borderPulse {\r\n        0% {\r\n          border-color: rgba(255, 0, 255, 0.5);\r\n        }\r\n        50% {\r\n          border-color: rgba(255, 0, 255, 0.8);\r\n        }\r\n        100% {\r\n          border-color: rgba(255, 0, 255, 0.5);\r\n        }\r\n      }\r\n\r\n      .start-button:hover {\r\n        transform: scale(1.05) translateY(-5px);\r\n        box-shadow: 0 0 30px rgba(76, 175, 80, 0.5);\r\n      }\r\n\r\n      /* Mobile-specific styles */\r\n      @media (max-width: 768px) {\r\n        .game-container {\r\n          width: 100vw;\r\n          height: 100vh;\r\n          overflow: hidden;\r\n          position: fixed;\r\n          top: 0;\r\n          left: 0;\r\n          touch-action: none;\r\n          -webkit-touch-callout: none;\r\n          -webkit-user-select: none;\r\n          -khtml-user-select: none;\r\n          -moz-user-select: none;\r\n          -ms-user-select: none;\r\n          user-select: none;\r\n          -webkit-tap-highlight-color: transparent;\r\n        }\r\n\r\n        .start-button {\r\n          padding: 1.5rem 3rem !important;\r\n          font-size: 2rem !important;\r\n        }\r\n\r\n        h1 {\r\n          font-size: 4rem !important;\r\n        }\r\n\r\n        .game-info {\r\n          font-size: 1.5rem !important;\r\n          padding: 1rem !important;\r\n          background: rgba(0, 0, 0, 0.7) !important;\r\n          border-radius: 1rem !important;\r\n        }\r\n      }\r\n    `;\r\n    document.head.appendChild(style);\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      window.removeEventListener('resize', onWindowResize);\r\n      window.removeEventListener('keydown', onKeyDown);\r\n      window.removeEventListener('keyup', onKeyUp);\r\n      if (containerRef.current) {\r\n        containerRef.current.removeEventListener('touchstart', handleTouchStart);\r\n        containerRef.current.removeEventListener('touchmove', handleTouchMove);\r\n        containerRef.current.removeEventListener('touchend', handleTouchEnd);\r\n      }\r\n      if (timerIntervalRef.current) {\r\n        clearInterval(timerIntervalRef.current);\r\n      }\r\n      if (animationFrameRef.current) {\r\n        cancelAnimationFrame(animationFrameRef.current);\r\n      }\r\n      if (rendererRef.current) {\r\n        rendererRef.current.dispose();\r\n        if (containerRef.current && rendererRef.current.domElement) {\r\n          containerRef.current.removeChild(rendererRef.current.domElement);\r\n        }\r\n      }\r\n      document.head.removeChild(style);\r\n    };\r\n  }, []);\r\n\r\n  const update = () => {\r\n    if (!gameStarted || gameOver) return;\r\n\r\n    // Move otter based on key presses\r\n    if (!otterRef.current) return;\r\n    const moveSpeed = 0.2;\r\n    let moving = false;\r\n    let targetRotation = (otterRef.current as any).rotation.y;\r\n\r\n    if (keysRef.current.ArrowUp || keysRef.current.w) {\r\n      (otterRef.current as any).position.z -= moveSpeed;\r\n      targetRotation = Math.PI;\r\n      moving = true;\r\n    }\r\n    if (keysRef.current.ArrowDown || keysRef.current.s) {\r\n      (otterRef.current as any).position.z += moveSpeed;\r\n      targetRotation = 0;\r\n      moving = true;\r\n    }\r\n    if (keysRef.current.ArrowLeft || keysRef.current.a) {\r\n      (otterRef.current as any).position.x -= moveSpeed;\r\n      targetRotation = -Math.PI / 2;\r\n      moving = true;\r\n    }\r\n    if (keysRef.current.ArrowRight || keysRef.current.d) {\r\n      (otterRef.current as any).position.x += moveSpeed;\r\n      targetRotation = Math.PI / 2;\r\n      moving = true;\r\n    }\r\n\r\n    if (moving) {\r\n      (otterRef.current as any).rotation.y = THREE.MathUtils.lerp((otterRef.current as any).rotation.y, targetRotation, 0.2);\r\n    }\r\n\r\n    // Keep otter within bounds\r\n    (otterRef.current as any).position.x = Math.max(-20, Math.min(20, (otterRef.current as any).position.x));\r\n    (otterRef.current as any).position.z = Math.max(-49, Math.min(49, (otterRef.current as any).position.z));\r\n\r\n    // Calculate current speed based on level\r\n    const currentSpeed = baseSpeedRef.current * (1 + (level - 1) * 0.15);\r\n\r\n    // Update obstacle spawn interval based on level\r\n    currentObstacleIntervalRef.current = Math.max(100, obstacleSpawnIntervalRef.current - (level * 20));\r\n\r\n    // Spawn obstacles and fish\r\n    const currentTime = Date.now();\r\n    if (currentTime - lastObstacleTimeRef.current > currentObstacleIntervalRef.current) {\r\n      createObstacle();\r\n      if (Math.random() < (level * 0.1)) {\r\n        createObstacle();\r\n      }\r\n      lastObstacleTimeRef.current = currentTime;\r\n    }\r\n\r\n    if (currentTime - lastFishTimeRef.current > 1500) {\r\n      createFish();\r\n      lastFishTimeRef.current = currentTime;\r\n    }\r\n\r\n    // Update obstacles\r\n    for (let i = obstaclesRef.current.length - 1; i >= 0; i--) {\r\n      const obstacle = obstaclesRef.current[i];\r\n      (obstacle as any).position.z += currentSpeed;\r\n      \r\n      if ((obstacle as any).position.z > 10) {\r\n        sceneRef.current?.remove(obstacle);\r\n        obstaclesRef.current.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    // Update fish\r\n    for (let i = fishRef.current.length - 1; i >= 0; i--) {\r\n      const fish = fishRef.current[i];\r\n      const fishType = (fish as any).userData.type;\r\n      const fishSpeed = FISH_TYPES[fishType].speed * currentSpeed;\r\n      \r\n      (fish as any).position.z += fishSpeed;\r\n      (fish as any).position.y = 0.5 + Math.sin(Date.now() * 0.003 + i) * 0.1;\r\n      \r\n      if ((fish as any).position.z > 10) {\r\n        sceneRef.current?.remove(fish);\r\n        fishRef.current.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    // Update game time\r\n    gameTimeRef.current += 1/120;\r\n    setGameTime(gameTimeRef.current);\r\n\r\n    // Check collisions\r\n    checkCollisions();\r\n\r\n    // Update environment\r\n    updateEnvironment();\r\n  };\r\n\r\n  const checkCollisions = () => {\r\n    if (!gameStarted || gameOver || !otterRef.current || !sceneRef.current) return;\r\n    const scene = sceneRef.current;\r\n\r\n    // Check obstacle collisions\r\n    for (let i = obstaclesRef.current.length - 1; i >= 0; i--) {\r\n      const obstacle = obstaclesRef.current[i];\r\n      const distance = (otterRef.current as any).position.distanceTo((obstacle as any).position);\r\n      if (distance < 1.5) {\r\n        setLives(prev => prev - 1);\r\n        scene.remove(obstacle);\r\n        obstaclesRef.current.splice(i, 1);\r\n        if (lives <= 1) {\r\n          endGame();\r\n        }\r\n      }\r\n    }\r\n\r\n    // Check fish collisions\r\n    for (let i = fishRef.current.length - 1; i >= 0; i--) {\r\n      const fish = fishRef.current[i];\r\n      const distance = (otterRef.current as any).position.distanceTo((fish as any).position);\r\n      if (distance < 1.5) {\r\n        setScore(prev => prev + 1);\r\n        scene.remove(fish);\r\n        fishRef.current.splice(i, 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const endGame = () => {\r\n    setGameOver(true);\r\n    setGameStarted(false);\r\n    if (timerIntervalRef.current) {\r\n      clearInterval(timerIntervalRef.current);\r\n    }\r\n  };\r\n\r\n  const updateEnvironment = () => {\r\n    if (!gameStarted || gameOver || !sceneRef.current) return;\r\n    const scene = sceneRef.current;\r\n\r\n    // Animate river surface\r\n    if (riverRef.current) {\r\n      const time = Date.now() * 0.001;\r\n      const vertices = (riverRef.current as any).geometry.attributes.position.array;\r\n      for (let i = 0; i < vertices.length; i += 3) {\r\n        const x = vertices[i];\r\n        const z = vertices[i + 2];\r\n        vertices[i + 1] = Math.sin(x * 0.5 + time) * 0.2 + Math.sin(z * 0.5 + time) * 0.2;\r\n      }\r\n      (riverRef.current as any).geometry.attributes.position.needsUpdate = true;\r\n      (riverRef.current as any).geometry.computeVertexNormals();\r\n    }\r\n\r\n    // Animate sun\r\n    if (scene.userData.sunGroup) {\r\n      const sun = scene.userData.sunGroup;\r\n      (sun as any).rotation.y += 0.0005;\r\n      (sun as any).rotation.z = Math.sin(Date.now() * 0.0003) * 0.05;\r\n    }\r\n\r\n    // Animate clouds\r\n    if (scene.userData.cloudGroup) {\r\n      const cloudGroup = scene.userData.cloudGroup;\r\n      cloudGroup.children.forEach((cloud: any) => {\r\n        (cloud as any).position.x += (cloud as any).userData.speed;\r\n        if ((cloud as any).position.x > 200) {\r\n          (cloud as any).position.x = -200;\r\n        }\r\n        (cloud as any).position.y += Math.sin(Date.now() * 0.001 + (cloud as any).position.x) * 0.01;\r\n      });\r\n    }\r\n  };\r\n\r\n  const onWindowResize = () => {\r\n    if (!cameraRef.current || !rendererRef.current) return;\r\n    const width = window.innerWidth;\r\n    const height = window.innerHeight;\r\n    \r\n    // Update camera\r\n    cameraRef.current.aspect = width / height;\r\n    cameraRef.current.updateProjectionMatrix();\r\n    \r\n    // Update renderer\r\n    rendererRef.current.setSize(width, height);\r\n    rendererRef.current.setPixelRatio(window.devicePixelRatio);\r\n  };\r\n\r\n  const onKeyDown = (event: KeyboardEvent) => {\r\n    if (keysRef.current.hasOwnProperty(event.key)) {\r\n      keysRef.current[event.key as keyof typeof keysRef.current] = true;\r\n    }\r\n  };\r\n\r\n  const onKeyUp = (event: KeyboardEvent) => {\r\n    if (keysRef.current.hasOwnProperty(event.key)) {\r\n      keysRef.current[event.key as keyof typeof keysRef.current] = false;\r\n    }\r\n  };\r\n\r\n  const resetGameState = () => {\r\n    setScore(0);\r\n    setLives(3);\r\n    setLevel(1);\r\n    setGameStarted(false);\r\n    setGameOver(false);\r\n    setGameTime(0);\r\n    obstaclesRef.current = [];\r\n    fishRef.current = [];\r\n    lastObstacleTimeRef.current = 0;\r\n    lastFishTimeRef.current = 0;\r\n    gameTimeRef.current = 0;\r\n    baseSpeedRef.current = 0.2;\r\n    currentObstacleIntervalRef.current = obstacleSpawnIntervalRef.current;\r\n  };\r\n\r\n  const createEnvironment = () => {\r\n    if (!sceneRef.current) return;\r\n    const scene = sceneRef.current;\r\n    // Create sun\r\n    const sunGeometry = new THREE.SphereGeometry(5, 32, 32);\r\n    const sunMaterial = new THREE.MeshBasicMaterial({\r\n      color: 0xffff00,\r\n      transparent: true,\r\n      opacity: 0.8\r\n    });\r\n    const sun = new THREE.Mesh(sunGeometry, sunMaterial) as THREE.Mesh;\r\n    (sun as any).position.set(30, 30, -50);\r\n    scene.add(sun);\r\n\r\n    // Add sun glow\r\n    const sunGlowGeometry = new THREE.SphereGeometry(6, 32, 32);\r\n    const sunGlowMaterial = new THREE.MeshBasicMaterial({\r\n      color: 0xffff00,\r\n      transparent: true,\r\n      opacity: 0.3\r\n    });\r\n    const sunGlow = new THREE.Mesh(sunGlowGeometry, sunGlowMaterial) as THREE.Mesh;\r\n    (sunGlow as any).position.set(30, 30, -50);\r\n    scene.add(sunGlow);\r\n\r\n    // Create clouds\r\n    const cloudGroup = new THREE.Group();\r\n    const cloudMaterial = new THREE.MeshStandardMaterial({\r\n      color: 0xFFFFFF,\r\n      transparent: true,\r\n      opacity: 0.9,\r\n      roughness: 0.8,\r\n      metalness: 0.2\r\n    });\r\n\r\n    for (let i = 0; i < 10; i++) {\r\n      const cloud = createCloud(cloudMaterial);\r\n      (cloud as any).position.set(\r\n        (Math.random() - 0.5) * 300,\r\n        20 + Math.random() * 15,\r\n        -100 - Math.random() * 200\r\n      );\r\n      (cloud as any).scale.set(\r\n        1 + Math.random(),\r\n        1 + Math.random(),\r\n        1 + Math.random()\r\n      );\r\n      cloud.userData = {\r\n        speed: 0.02 + Math.random() * 0.03,\r\n        initialX: (cloud as any).position.x\r\n      };\r\n      cloudGroup.add(cloud);\r\n    }\r\n    scene.add(cloudGroup);\r\n    scene.userData.sunGroup = sun;\r\n    scene.userData.cloudGroup = cloudGroup;\r\n  };\r\n\r\n  const createCloud = (material: THREE.Material) => {\r\n    const cloudGroup = new THREE.Group();\r\n    const numBlobs = 3 + Math.floor(Math.random() * 3);\r\n    for (let i = 0; i < numBlobs; i++) {\r\n      const blobGeometry = new THREE.SphereGeometry(1, 8, 8);\r\n      const blob = new THREE.Mesh(blobGeometry, material as unknown as THREE.MeshBasicMaterial) as THREE.Mesh;\r\n      (blob as any).position.set(\r\n        (Math.random() - 0.5) * 2,\r\n        (Math.random() - 0.5) * 2,\r\n        (Math.random() - 0.5) * 2\r\n      );\r\n      (blob as any).scale.set(\r\n        1 + Math.random(),\r\n        1 + Math.random(),\r\n        1 + Math.random()\r\n      );\r\n      cloudGroup.add(blob);\r\n    }\r\n    return cloudGroup;\r\n  };\r\n\r\n  const createRiver = () => {\r\n    if (!sceneRef.current) return;\r\n    const scene = sceneRef.current;\r\n    const riverGeometry = new THREE.PlaneGeometry(120, 1200, 20, 20); // Increased size\r\n    const riverMaterial = new THREE.MeshStandardMaterial({\r\n      color: 0x4682B4,\r\n      roughness: 0.2,\r\n      metalness: 0.8,\r\n      transparent: true,\r\n      opacity: 0.8\r\n    }) as unknown as THREE.MeshBasicMaterial;\r\n    const river = new THREE.Mesh(riverGeometry, riverMaterial) as THREE.Mesh;\r\n    (river as any).rotation.x = -Math.PI / 2;\r\n    (river as any).position.z = -600; // Adjusted position\r\n    river.receiveShadow = true;\r\n    scene.add(river);\r\n    riverRef.current = river;\r\n  };\r\n\r\n  const createOtter = () => {\r\n    if (!sceneRef.current) return;\r\n    const scene = sceneRef.current;\r\n    const otterGeometry = new THREE.CapsuleGeometry(0.8, 1.5, 4, 8); // Increased size\r\n    const otterMaterial = new THREE.MeshStandardMaterial({\r\n      color: 0x8B4513,\r\n      roughness: 0.7,\r\n      metalness: 0.2\r\n    }) as unknown as THREE.MeshBasicMaterial;\r\n    const otter = new THREE.Mesh(otterGeometry, otterMaterial) as THREE.Mesh;\r\n    (otter as any).position.set(0, 0.5, 0); // Raised position\r\n    (otter as any).rotation.y = Math.PI;\r\n    otter.castShadow = true;\r\n    scene.add(otter);\r\n    otterRef.current = otter;\r\n  };\r\n\r\n  const startGame = () => {\r\n    if (gameStarted) return;\r\n    \r\n    // Reset game state\r\n    setScore(0);\r\n    setLives(3);\r\n    setLevel(1);\r\n    setGameTime(0);\r\n    setGameOver(false);\r\n    setGameStarted(true);\r\n    \r\n    // Reset refs\r\n    lastObstacleTimeRef.current = Date.now();\r\n    lastFishTimeRef.current = Date.now();\r\n    gameTimeRef.current = 0;\r\n    baseSpeedRef.current = 0.2;\r\n    currentObstacleIntervalRef.current = obstacleSpawnIntervalRef.current;\r\n    \r\n    // Clear any existing obstacles and fish\r\n    if (sceneRef.current) {\r\n      obstaclesRef.current.forEach(obstacle => sceneRef.current!.remove(obstacle));\r\n      fishRef.current.forEach(fish => sceneRef.current!.remove(fish));\r\n      obstaclesRef.current = [];\r\n      fishRef.current = [];\r\n    }\r\n    \r\n    // Reset otter position\r\n    if (otterRef.current) {\r\n      (otterRef.current as any).position.set(0, 0.5, 0);\r\n      (otterRef.current as any).rotation.y = Math.PI;\r\n    }\r\n    \r\n    // Start level progression timer\r\n    if (timerIntervalRef.current) {\r\n      clearInterval(timerIntervalRef.current);\r\n    }\r\n    timerIntervalRef.current = setInterval(() => {\r\n      setLevel(prev => prev + 1);\r\n      baseSpeedRef.current += 0.02;\r\n    }, 15000);\r\n  };\r\n\r\n  const restartGame = () => {\r\n    // Clear existing game elements\r\n    if (sceneRef.current) {\r\n      obstaclesRef.current.forEach(obstacle => sceneRef.current!.remove(obstacle));\r\n      fishRef.current.forEach(fish => sceneRef.current!.remove(fish));\r\n    }\r\n    \r\n    // Clear timer\r\n    if (timerIntervalRef.current) {\r\n      clearInterval(timerIntervalRef.current);\r\n    }\r\n    \r\n    // Reset game state\r\n    resetGameState();\r\n    setGameOver(false);\r\n    startGame();\r\n  };\r\n\r\n  const submitScore = () => {\r\n    const name = playerName.trim() || 'Anonymous';\r\n    const newScore = {\r\n      name,\r\n      score,\r\n      level,\r\n      time: Math.round(gameTime)\r\n    };\r\n    \r\n    const updatedLeaderboard = [...leaderboard, newScore]\r\n      .sort((a, b) => b.score - a.score)\r\n      .slice(0, 10);\r\n    \r\n    setLeaderboard(updatedLeaderboard);\r\n    localStorage.setItem('otterRiverLeaderboard', JSON.stringify(updatedLeaderboard));\r\n    setPlayerName('');\r\n  };\r\n\r\n  const returnToMenu = () => {\r\n    setGameOver(false);\r\n    setGameStarted(false);\r\n    resetGameState();\r\n    if (otterRef.current) {\r\n      (otterRef.current as any).position.set(0, 0.25, 0);\r\n      (otterRef.current as any).rotation.y = Math.PI;\r\n    }\r\n    if (sceneRef.current) {\r\n      obstaclesRef.current.forEach(obstacle => sceneRef.current!.remove(obstacle));\r\n      fishRef.current.forEach(fish => sceneRef.current!.remove(fish));\r\n      obstaclesRef.current = [];\r\n      fishRef.current = [];\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const createObstacle = () => {\r\n    if (!gameStarted || gameOver || !sceneRef.current) return;\r\n\r\n    const random = Math.random();\r\n    let cumulativeProbability = 0;\r\n    let selectedType = 'rock';\r\n\r\n    for (const [type, properties] of Object.entries(OBSTACLE_TYPES)) {\r\n      cumulativeProbability += properties.probability;\r\n      if (random <= cumulativeProbability) {\r\n        selectedType = type;\r\n        break;\r\n      }\r\n    }\r\n\r\n    const obstacleProperties = OBSTACLE_TYPES[selectedType];\r\n    const obstacle = new THREE.Mesh(\r\n      obstacleProperties.geometry,\r\n      new THREE.MeshStandardMaterial({\r\n        color: obstacleProperties.color,\r\n        roughness: 0.8,\r\n        metalness: 0.2\r\n      }) as unknown as THREE.MeshBasicMaterial\r\n    ) as THREE.Mesh;\r\n    \r\n    (obstacle as any).position.x = (Math.random() - 0.5) * 40;\r\n    (obstacle as any).position.y = 0.5;\r\n    (obstacle as any).position.z = -60;\r\n    \r\n    (obstacle as any).rotation.x = Math.random() * Math.PI;\r\n    (obstacle as any).rotation.y = Math.random() * Math.PI;\r\n    (obstacle as any).rotation.z = Math.random() * Math.PI;\r\n    \r\n    (obstacle as any).scale.set(\r\n      obstacleProperties.scale,\r\n      obstacleProperties.scale,\r\n      obstacleProperties.scale\r\n    );\r\n    \r\n    obstacle.castShadow = true;\r\n    obstacle.userData = { type: 'obstacle', obstacleType: selectedType };\r\n    sceneRef.current.add(obstacle);\r\n    obstaclesRef.current.push(obstacle);\r\n  };\r\n\r\n  const createFish = () => {\r\n    if (!gameStarted || gameOver || !sceneRef.current) return;\r\n\r\n    const random = Math.random();\r\n    let cumulativeProbability = 0;\r\n    let selectedType = 'normal';\r\n\r\n    for (const [type, properties] of Object.entries(FISH_TYPES)) {\r\n      cumulativeProbability += properties.probability;\r\n      if (random <= cumulativeProbability) {\r\n        selectedType = type;\r\n        break;\r\n      }\r\n    }\r\n\r\n    const fishProperties = FISH_TYPES[selectedType];\r\n    const fish = new THREE.Mesh(\r\n      fishProperties.geometry,\r\n      new THREE.MeshStandardMaterial({\r\n        color: fishProperties.color,\r\n        roughness: 0.3,\r\n        metalness: 0.8\r\n      }) as unknown as THREE.MeshBasicMaterial\r\n    ) as THREE.Mesh;\r\n\r\n    (fish as any).position.x = (Math.random() - 0.5) * 40;\r\n    (fish as any).position.y = 0.5;\r\n    (fish as any).position.z = -60;\r\n    (fish as any).rotation.y = Math.PI / 2;\r\n    (fish as any).scale.set(\r\n      fishProperties.scale,\r\n      fishProperties.scale,\r\n      fishProperties.scale\r\n    );\r\n    fish.castShadow = true;\r\n    fish.userData = { type: selectedType, points: fishProperties.points };\r\n    sceneRef.current.add(fish);\r\n    fishRef.current.push(fish);\r\n  };\r\n\r\n  return (\r\n    <div ref={containerRef} style={{\r\n      width: '100%',\r\n      height: '100%',\r\n      position: 'relative',\r\n      overflow: 'hidden',\r\n      backgroundColor: '#000',\r\n      touchAction: 'none',\r\n      WebkitTouchCallout: 'none',\r\n      WebkitUserSelect: 'none',\r\n      KhtmlUserSelect: 'none',\r\n      MozUserSelect: 'none',\r\n      msUserSelect: 'none',\r\n      userSelect: 'none',\r\n      WebkitTapHighlightColor: 'transparent'\r\n    }} className=\"game-container\">\r\n      <StartScreen />\r\n      <GameOverScreen />\r\n      <GameInfo />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game; ","import React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, Text, View, Dimensions } from 'react-native';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport Game from './src/Game';\r\n\r\nexport default function App() {\r\n  const [dimensions, setDimensions] = useState({\r\n    width: Dimensions.get('window').width,\r\n    height: Dimensions.get('window').height,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const subscription = Dimensions.addEventListener('change', ({ window }) => {\r\n      setDimensions({\r\n        width: window.width,\r\n        height: window.height,\r\n      });\r\n    });\r\n\r\n    return () => subscription?.remove();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={[styles.container, { width: dimensions.width, height: dimensions.height }]}>\r\n      <Text style={styles.title}>Otter River Adventure</Text>\r\n      <Text style={styles.subtitle}>Mobile Version</Text>\r\n      <View style={styles.gameContainer}>\r\n        <Game />\r\n      </View>\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n  subtitle: {\r\n    fontSize: 18,\r\n    color: '#666',\r\n    marginBottom: 20,\r\n  },\r\n  gameContainer: {\r\n    width: '100%',\r\n    height: '70%',\r\n    backgroundColor: '#f0f0f0',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n}); ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [546], () => (__webpack_require__(6387)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["OBSTACLE_TYPES","rock","geometry","THREE","color","scale","probability","log","FISH_TYPES","normal","speed","points","rare","containerRef","useRef","_useState","useState","_useState2","_slicedToArray","score","setScore","_useState3","_useState4","lives","setLives","_useState5","_useState6","level","setLevel","_useState7","_useState8","gameStarted","setGameStarted","_useState9","_useState0","gameOver","setGameOver","_useState1","_useState10","playerName","setPlayerName","_useState11","JSON","parse","localStorage","getItem","_unused","defaultLeaderboard","_useState12","leaderboard","setLeaderboard","_useState13","_useState14","gameTime","setGameTime","sceneRef","cameraRef","rendererRef","otterRef","riverRef","obstaclesRef","fishRef","lastObstacleTimeRef","lastFishTimeRef","gameTimeRef","timerIntervalRef","baseSpeedRef","obstacleSpawnIntervalRef","currentObstacleIntervalRef","animationFrameRef","keysRef","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","w","a","s","d","_useState15","x","y","_useState16","touchStart","setTouchStart","_useState17","_useState18","touchActive","setTouchActive","useEffect","current","scene","background","fog","camera","window","innerWidth","innerHeight","position","set","lookAt","add","renderer","antialias","alpha","powerPreference","setPixelRatio","Math","min","devicePixelRatio","setSize","shadowMap","enabled","type","appendChild","domElement","handleTouchStart","e","touch","touches","clientX","clientY","handleTouchMove","deltaX","deltaY","handleTouchEnd","Object","keys","forEach","key","addEventListener","ambientLight","directionalLight","castShadow","shadow","mapSize","width","height","createEnvironment","createRiver","createOtter","onWindowResize","onKeyDown","onKeyUp","animate","requestAnimationFrame","update","render","style","document","createElement","textContent","head","removeEventListener","clearInterval","cancelAnimationFrame","dispose","removeChild","moveSpeed","moving","targetRotation","rotation","z","PI","lerp","max","currentSpeed","currentTime","Date","now","createObstacle","random","createFish","i","length","_sceneRef$current","obstacle","remove","splice","_sceneRef$current2","fish","fishType","userData","fishSpeed","sin","checkCollisions","updateEnvironment","distanceTo","prev","endGame","time","vertices","attributes","array","needsUpdate","computeVertexNormals","sunGroup","sun","cloudGroup","children","cloud","aspect","updateProjectionMatrix","event","hasOwnProperty","sunGeometry","sunMaterial","transparent","opacity","sunGlowGeometry","sunGlowMaterial","sunGlow","cloudMaterial","roughness","metalness","createCloud","initialX","material","numBlobs","floor","blobGeometry","blob","riverGeometry","riverMaterial","river","receiveShadow","otterGeometry","otterMaterial","otter","startGame","setInterval","submitScore","newScore","name","trim","round","updatedLeaderboard","concat","_toConsumableArray","sort","b","slice","setItem","stringify","cumulativeProbability","selectedType","_ref","entries","_ref2","obstacleProperties","obstacleType","push","_ref3","_ref4","fishProperties","_jsxs","ref","overflow","backgroundColor","touchAction","WebkitTouchCallout","WebkitUserSelect","KhtmlUserSelect","MozUserSelect","msUserSelect","userSelect","WebkitTapHighlightColor","className","_jsx","top","left","display","flexDirection","justifyContent","alignItems","backdropFilter","zIndex","animation","fontSize","textShadow","marginBottom","onClick","padding","border","borderRadius","cursor","transition","boxShadow","marginTop","textAlign","maxWidth","gap","value","onChange","target","placeholder","map","entry","index","toString","padStart","App","Dimensions","get","dimensions","setDimensions","subscription","View","styles","container","Text","title","subtitle","gameContainer","Game","StatusBar","StyleSheet","create","flex","fontWeight","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","r","n","getter","__esModule","definition","o","defineProperty","enumerable","obj","prop","prototype","call","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}